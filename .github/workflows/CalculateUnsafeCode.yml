# A workflow to analyze unsafe code usage and generate badges
# to show the amount of unsafe code in the repository.
#
##
# Copyright (c) Microsoft Corporation.
#
# SPDX-License-Identifier: Apache-2.0
##
name: "Unsafe Code Analysis"

on:
  workflow_call:

jobs:
  analyze-unsafe-code:
    name: Analyze Unsafe Code Usage
    runs-on: ubuntu-latest

    steps:
      - name: Generate Token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.PATINA_AUTOMATION_APPLICATION_ID }}
          private-key: ${{ secrets.PATINA_AUTOMATION_APPLICATION_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: ✅ Checkout Repository ✅
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Checkout patina-devops scripts
        uses: actions/checkout@v5
        with:
          repository: OpenDevicePartnership/patina-devops
          path: patina-devops-scripts
          token: ${{ steps.app-token.outputs.token }}
          sparse-checkout: |
            .github/scripts
          sparse-checkout-cone-mode: false

      - name: 🛠️ Download Rust Tools 🛠️
        uses: OpenDevicePartnership/patina-devops/.github/actions/rust-tool-cache@main

      - name: Run unsafe code analysis
        env:
          RUSTC_BOOTSTRAP: 1
        run: |
          python3 patina-devops-scripts/.github/scripts/analyze_unsafe_code_geiger.py

      - name: Update git credentials
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout the unsafe-code-badges branch
        run: |
          mkdir -p /tmp/badge-data
          cp -r unsafe-code-analysis/* /tmp/badge-data/
          rm -rf unsafe-code-analysis

          git fetch origin

          if git ls-remote --exit-code --heads origin unsafe-code-badges; then
            git checkout -B unsafe-code-badges origin/unsafe-code-badges
          else
            git checkout -b unsafe-code-badges
          fi

          # Remove the old data and copy the new data
          rm -rf x86_64-unknown-uefi aarch64-unknown-uefi unsafe_analysis.* 2>/dev/null || true
          cp -r /tmp/badge-data/* .

      - name: Push badge data to the unsafe-code-badges branch
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git add x86_64-unknown-uefi/ aarch64-unknown-uefi/ unsafe_analysis.* 2>/dev/null || true
          git commit -m "Update unsafe code analysis badge data" || echo "No changes to commit"

          git push origin unsafe-code-badges
