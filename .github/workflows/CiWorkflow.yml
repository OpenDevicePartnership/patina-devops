# A reusable CI workflow that runs basic CI tests and Rust CI tests.
#
##
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: Apache-2.0
##
name: CI

on:
  workflow_call:
    inputs:
      build-tasks:
        description: "Comma-separated list of build tasks to run (e.g., 'build,build-x64,build-aarch64')"
        required: false
        default: ""
        type: string
      mdbook-path:
        description: "Path to the mdbook to build"
        required: false
        default: ""
        type: string
      run-cargo-vet:
        description: "Whether to run cargo vet"
        required: false
        default: true
        type: boolean
      run-release-dry-run:
        description: "Whether to run cargo release dry run"
        required: false
        default: true
        type: boolean

jobs:
  basic_ci:
    name: Basic Repo CI

    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout Repository ✅
        uses: actions/checkout@v5

      - name: 🔤 Check Spelling 🔤
        uses: streetsidesoftware/cspell-action@v6
        with:
          treat_flagged_words_as_errors: true
          strict: true
          inline: warning
          incremental_files_only: false

      - name: Markdown Linting
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          config: .markdownlint.yml
          args: "**/*.md"

      - name: 🛠️ Download Rust Tools 🛠️
        uses: OpenDevicePartnership/patina-devops/.github/actions/rust-tool-cache@main
        if: ${{ inputs.mdbook-path != '' }}

      - name: 📖 Build Book 📖
        run: mdbook build ${{ inputs.mdbook-path }}
        if: ${{ inputs.mdbook-path != '' }}

  run:
    name: Rust CI

    needs: [ basic_ci ]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: ✅ Checkout Repository ✅
        uses: actions/checkout@v5

      - name: 🛠️ Download Rust Tools 🛠️
        uses: OpenDevicePartnership/patina-devops/.github/actions/rust-tool-cache@main

      - name: Run cargo-vet
        if: ${{ inputs.run-cargo-vet }}
        run: cargo make vet

      - name: Run cargo-fmt
        run: cargo fmt --all --check
        env:
          RUSTC_BOOTSTRAP: 1

      - name: Run cargo-deny
        run: cargo make deny

      - name: Run cargo-clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
        env:
          RUSTC_BOOTSTRAP: 1

      - name: Crate Release Dry Run
        if: ${{ inputs.run-release-dry-run }}
        run: cargo release alpha --no-tag --workspace --no-push --allow-branch '*'
        env:
          RUSTC_BOOTSTRAP: 1

      - name: 🧪 Run Tests 🧪
        run: cargo make coverage

      - name: Test Documentation
        run: cargo test --doc
        env:
          RUSTC_BOOTSTRAP: 1

      - name: Build documentation
        run: cargo make doc

      - name: Upload Coverage Report
        if: github.repository_owner == 'OpenDevicePartnership'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/lcov.info
          fail_ci_if_error: true

      - name: Run Build Tasks
        if: ${{ inputs.build-tasks != '' }}
        run: |
          IFS=',' read -ra TASKS <<< "${{ inputs.build-tasks }}"
          for task in "${TASKS[@]}"; do
            task=$(echo "$task" | xargs)
            echo "Running cargo make $task"
            cargo make $task
          done
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-ci-artifacts
          path: |
            Cargo.lock
            target/cobertura.xml

  finalize:
    name: Finalize

    needs: [ run ]

    runs-on: ubuntu-latest

    steps:
      - name: Finish
        run: echo "CI Complete"
